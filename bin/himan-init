#!/usr/bin/env node
var path = require('path'),
    fs = require('fs'),
    fse = require('fs-extra'),
    request = require('request'),
    chalk = require('chalk'),
    inquirer = require('inquirer'),
    downloadRepo = require('download-git-repo'),
    ora = require('ora')
;

var $version = 'nothing';
try{
    $version = require('../.tmp/$config').version
}catch(err){
    console.log(err)
}
console.log($version)
//

const $tmp = path.resolve(__dirname, '../.tmp')
      $dist = process.cwd()
;
request(
    {
        url: "https://github.com/HiShanFire/hi-gulp4-cli/raw/master/resources/$config.js"
    },
    (err, res, body) => {

        if(getVersion(body) == $version) return cloneNodeModules();

        var spinner = ora("downloading node_modules...")
        spinner.start();
        downloadRepo('HiShanFire/hi-gulp-cli', $tmp, {clone:false}, (err)=>{
            spinner.stop();
            if(err) return console.log(err)
            console.log();
            console.log(chalk.green('download success!'))
        })
        cloneNodeModules();
        // .pipe(fs.createWriteStream($version_tmp))
    }
)

function getVersion(data){
    return eval('(function(){'+
            'var v; v='+ data +';'+
            'return v.version'
            +'})()')
}



function cloneNodeModules(){
    fse.copy( $tmp, $dist, (err) => {
        if(err) return console.log(err);
        console.log(chalk.green('copy success!'))
    })
}
// request(
//     {
//         url: "https://github.com/HiShanFire/hi-gulp4-cli/raw/master/package.json"
//     },
//     function(err, res, body){
//         var version = JSON.parse(body).version;
//         console.log(local_version)
//         console.log(version)
//         var spinner = ora('downloading node_modules')
//         spinner.start()
//         downloadRepo('HiShanFire/hi-gulp4-cli', ydist, {clone:false}, (err)=>{
//             if(err) return console.log(err)
//             console.log(chalk.green('download success!'))
//             spinner.stop()
//         })
//         // if(local_version.version == version){
//         //     console.log('match')
//         // }else{
//         //     console.log('no match')
//         // }
//     }
// )
//

// program
//     .version('0.0.1')
//     .command('init', 'foo')
//     .action(function(){
//         console.log(123)
//     });
//
// program.parse(process.argv)
